<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wrc.cloud.dao.WeiboCommentDao">

    <resultMap type="com.wrc.cloud.PO.WeiboCommentPO" id="WeiboCommentPOMap">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="userId" column="user_id" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="location" column="location" jdbcType="VARCHAR"/>
        <result property="contentRaw" column="content_raw" jdbcType="VARCHAR"/>
        <result property="likeCount" column="like_count" jdbcType="INTEGER"/>
        <result property="commentNum" column="comment_num" jdbcType="INTEGER"/>
        <result property="rootId" column="root_id" jdbcType="VARCHAR"/>
        <result property="url" column="url" jdbcType="VARCHAR"/>
        <result property="blogId" column="blog_id" jdbcType="VARCHAR"/>
        <result property="maxId" column="max_id" jdbcType="VARCHAR"/>
        <result property="catchTime" column="catch_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap type="com.wrc.cloud.PO.AnalysisPO" id="WeiboCommentAnalysisPOMap">
        <result property="siteId" column="site_id" jdbcType="INTEGER"/>
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="analysis" column="analysis" jdbcType="VARCHAR"/>
        <result property="createdAt" column="created_at" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="WeiboCommentPOMap">
        select
          `id`, `user_id`, `create_time`, `location`, `content_raw`,
          `like_count`, `comment_num`, `root_id`, `url`, `blog_id`, `max_id`, `catch_time`
        from t_weibo_comment
        where id = #{id}
    </select>

    <!--通过网址查询id-->
    <select id="queryBlogIdByUrl" resultMap="WeiboCommentPOMap">
        select
          `blog_id`
        from t_weibo_comment
        where url like CONCAT("%", #{url}, "%")
        limit 1
    </select>

    <!--按条件查询帖子下的所有 一级评论, 【&lt;=】 【】里的为小于等于符号-->
    <select id="queryByCondition" resultMap="WeiboCommentPOMap">
        select
          `id`, `user_id`, `create_time`, `location`, `content_raw`,
          `like_count`, `comment_num`, `root_id`, `url`, `blog_id`, `max_id`, `catch_time`
        from t_weibo_comment
        <where>
            <if test="blogId != null">
                and blog_id = #{blogId}
            </if>
            <if test="minLike != null">
                and like_count >= #{minLike}
            </if>
            <if test="minReply != null">
                and comment_num >= #{minReply}
            </if>
            <if test="startTime != null">
                and create_time >= #{startTime}
            </if>
            <if test="endTime != null">
                and create_time <![CDATA[ <= ]]> #{endTime}
            </if>
            <if test="location != null and location != ''">
                and location like CONCAT("%", #{location}, "%")
            </if>
            <if test="url != null and url !=''">
                and url = #{url}
            </if>
        </where>
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from t_weibo_comment
        <where>
            <if test="blogId != null">
                and blog_id = #{blogId}
            </if>
            <if test="minLike != null">
                and like_count >= #{minLike}
            </if>
            <if test="minReply != null">
                and comment_num >= #{minReply}
            </if>
            <if test="startTime != null">
                and create_time >= #{startTime}
            </if>
            <if test="endTime != null">
                and create_time <![CDATA[ <= ]]> #{endTime}
            </if>
            <if test="location != null and location != ''">
                and location like CONCAT("%", #{location}, "%")
            </if>
            <if test="url != null and url !=''">
                and url = #{url}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="false">
        INSERT INTO t_weibo_comment
        (`id`, `user_id`, `create_time`, `location`, `content_raw`,
        `like_count`, `comment_num`, `root_id`, `url`, `blog_id`, `max_id`, `catch_time`)
        VALUES
        (#{id}, #{userId}, #{createTime}, #{location}, #{contentRaw},
        #{likeCount}, #{commentNum}, #{rootId}, #{url}, #{blogId}, #{maxId}, #{catchTime})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update t_weibo_comment
        <set>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="location != null">
                location = #{location},
            </if>
            <if test="contentRaw != null">
                content_raw = #{contentRaw},
            </if>
            <if test="likeCount != null">
                like_count = #{likeCount},
            </if>
            <if test="commentNum != null">
                comment_num = #{commentNum},
            </if>
            <if test="rootId != null">
                root_id = #{rootId},
            </if>
            <if test="url != null and url != ''">
                url = #{url},
            </if>
            <if test="blogId != null">
                blog_id = #{blogId},
            </if>
            <if test="maxId != null">
                max_id = #{maxId},
            </if>
            <if test="catchTime != null">
                catch_time = #{catchTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from t_weibo_comment where id = #{id}
    </delete>



    <!--查询已有的处理结果-->
    <select id="queryAnalysisByCondition" resultMap="WeiboCommentAnalysisPOMap">
        select an.id, an.site_id, an.analysis
        from t_weibo_comment co LEFT JOIN t_analysis an ON co.id=an.id
        <where>
            an.site_id=1 AND an.analysis IS NOT NULL
            <if test="blogId != null">
                and co.blog_id = #{blogId}
            </if>
            <if test="minLike != null">
                and co.like_count >= #{minLike}
            </if>
            <if test="minReply != null">
                and co.comment_num >= #{minReply}
            </if>
            <if test="startTime != null">
                and co.create_time >= #{startTime}
            </if>
            <if test="endTime != null">
                and co.create_time <![CDATA[ <= ]]> #{endTime}
            </if>
            <if test="location != null and location != ''">
                and co.location like CONCAT("%", #{location}, "%")
            </if>
            <if test="url != null and url !=''">
                and co.url = #{url}
            </if>
        </where>
    </select>

    <!-- 通过comment的id查询 没有分析结果的评论 -->
    <select id="queryBlogCommentWithoutAnalysis" resultMap="WeiboCommentPOMap">
        SELECT co.`id`, co.`user_id`, co.`create_time`, co.`location`, co.`content_raw`,
        co.`like_count`, co.`comment_num`, co.`root_id`, co.`url`, co.`blog_id`, co.`max_id`, co.`catch_time`
        FROM t_weibo_comment co LEFT JOIN t_analysis an ON  an.site_id=1 AND co.id=an.id
        <where>
            an.analysis IS NULL
            <if test="blogId != null">
                and co.blog_id=#{blogId}
            </if>
        </where>
    </select>

    <!-- 查询 特定的一个分析结果 -->
    <select id="queryAnalysisById" resultMap="WeiboCommentAnalysisPOMap">
        SELECT an.id, an.site_id, an.analysis
        FROM t_analysis an
        WHERE an.site_id=1 AND an.id=#{id}
    </select>

    <!-- 查询 已有的分析结果 -->
    <select id="queryAnalysis" resultMap="WeiboCommentAnalysisPOMap">
        SELECT an.id, an.site_id, an.analysis
        FROM t_analysis an
        <where>
            an.analysis IS NOT NULL
            <if test="siteId != null">
                AND an.site_id=#{siteId}
            </if>
            <if test="id != null">
                AND an.id=#{id}
            </if>
            <if test="analysis != null and analysis != ''">
                AND an.analysis=#{siteId}
            </if>
        </where>
    </select>





    <!--统计总行数-->
    <select id="countAnalysis" resultType="java.lang.Long">
        select count(*)
        from t_analysis
        <where>
            <if test="siteId != null">
                site_id = #{siteId}
            </if>
            <if test="id != null">
                id = #{id}
            </if>
            <if test="analysis != null and analysis != ''">
                analysis like CONCAT("%", #{analysis}, "%")
            </if>
        </where>
    </select>

    <!--新增Analysis所有列-->
    <insert id="insertAnalysis" keyProperty="id" useGeneratedKeys="false">
        INSERT INTO `t_analysis`
        (`site_id`, `id`, `analysis`)
        VALUES
        (#{siteId}, #{id}, #{analysis})
    </insert>

    <!--通过主键修改数据-->
    <update id="updateAnalysis">
        update t_analysis
        <set>
            <if test="analysis != null">
                analysis = #{analysis}
            </if>
        </set>
        where site_id = #{siteId} and id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteAnalysisById">
        delete from t_analysis where site_id = #{siteId} and id = #{id}
    </delete>

    <!--统计各个情绪的数量-->
    <select id="getStatisticInfo" resultType="java.util.Map">
        SELECT an.analysis as sentiment, COUNT(*) as num
        FROM t_analysis an
        WHERE an.site_id=#{weiboSiteId}
        GROUP BY an.analysis
    </select>

</mapper>

