<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wrc.cloud.dao.TwitterDao">

    <resultMap type="com.wrc.cloud.PO.TweetPO" id="TweetPOMap">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="source" column="source" jdbcType="VARCHAR"/>
        <result property="userId" column="user_Id" jdbcType="VARCHAR"/>
        <result property="conversationId" column="conversation_id" jdbcType="VARCHAR"/>
        <result property="fullText" column="full_text" jdbcType="VARCHAR"/>
        <result property="createdAt" column="created_at" jdbcType="TIMESTAMP"/>
        <result property="catchTime" column="catch_time" jdbcType="TIMESTAMP"/>
        <result property="bookmarkCount" column="bookmark_count" jdbcType="INTEGER"/>
        <result property="favoriteCount" column="favorite_count" jdbcType="INTEGER"/>
        <result property="lang" column="lang" jdbcType="VARCHAR"/>
        <result property="quoteCount" column="quote_count" jdbcType="INTEGER"/>
        <result property="replyCount" column="reply_count" jdbcType="INTEGER"/>
        <result property="retweetCount" column="retweet_count" jdbcType="INTEGER"/>
        <result property="viewCount" column="view_count" jdbcType="INTEGER"/>
        <result property="url" column="url" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap type="com.wrc.cloud.PO.TwitterUserPO" id="TwitterUserPOMap">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="screenName" column="screen_name" jdbcType="VARCHAR"/>
        <result property="idStr" column="id_str" jdbcType="VARCHAR"/>
        <result property="createdAt" column="created_at" jdbcType="TIMESTAMP"/>
        <result property="description" column="description" jdbcType="VARCHAR"/>
        <result property="location" column="location" jdbcType="VARCHAR"/>
        <result property="followersCount" column="followers_count" jdbcType="INTEGER"/>
        <result property="catchTime" column="catch_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap type="com.wrc.cloud.PO.AnalysisPO" id="AnalysisPOMap">
        <result property="siteId" column="site_id" jdbcType="INTEGER"/>
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="analysis" column="analysis" jdbcType="VARCHAR"/>
        <result property="createdAt" column="created_at" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--新增所有列-->
    <insert id="insertTweet">
        insert into t_twitter_comment(id, source, user_id, conversation_id, full_text, created_at, catch_time, bookmark_count, favorite_count, lang, quote_count, reply_count, retweet_count, view_count, url)
        values (#{id}, #{source}, #{userId}, #{conversationId}, #{fullText}, #{createdAt}, #{catchTime}, #{bookmarkCount}, #{favoriteCount}, #{lang}, #{quoteCount}, #{replyCount}, #{retweetCount}, #{viewCount}, #{url})
    </insert>
    <!--查询单个-->
    <select id="queryTweetById" resultMap="TweetPOMap">
        select
          id, source, user_id, conversation_id, full_text, created_at, catch_time, bookmark_count, favorite_count, lang, quote_count, reply_count, retweet_count, view_count, url
        from t_twitter_comment
        where id = #{id}
    </select>
    <!--通过url 右模糊查 一条！！-->
    <select id="queryTweetByUrl" resultMap="TweetPOMap">
        select
          id, source, user_id, conversation_id, full_text, created_at, catch_time, bookmark_count, favorite_count, lang, quote_count, reply_count, retweet_count, view_count, url
        from t_twitter_comment
        where url like CONCAT("%", #{url}, "%")
        limit 1
    </select>
    <!--查询 某贴 所有分析结果-->
    <select id="queryAnalysisByMainTweetId" resultMap="AnalysisPOMap">
        SELECT id, 2 as site_id, analysis
        FROM t_twitter_comment
        WHERE co.conversation_id={id} AND analysis IS NOT NULL AND analysis <![CDATA[ <> ]]> ""
    </select>
    <!--通过 text内容&&时间 查询 tweet的内容-->
    <select id="queryTweetsByTextAndTime" resultMap="TweetPOMap">
        SELECT co.id, co.conversation_id, co.full_text, co.created_at
        FROM
        (SELECT id,conversation_id,full_text,created_at
        FROM t_twitter_comment
        WHERE created_at >= #{startTime} and created_at <![CDATA[ <= ]]> #{endTime}) co
        <if test="texts != null and texts.size() > 0">
            WHERE
            <foreach collection="texts" item="text" separator="OR" open="(" close=")" index="idx">
                co.full_text LIKE CONCAT("%", #{text},"%")
            </foreach>
        </if>
    </select>
    <!--通过主键修改key-->
    <insert id="saveConversationTweetKeyById">
        insert into t_tweet_key(`key`, tweet_id)
        values (#{key}, #{tweetId})
    </insert>
    <select id="countKeyWithTweetId" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM t_tweet_key
        WHERE `key`=#{key} AND tweet_id=#{tweetId}
    </select>
    <update id="updateTweetKeyConversationTimeSlot">
        UPDATE t_tweet_key tk INNER JOIN
        (SELECT conversation_id, MIN(created_at) as startT, MAX(created_at) as lastT
        FROM t_twitter_comment
        GROUP BY conversation_id) co
        ON tk.tweet_id=co.conversation_id
        SET tk.start_time=startT, tk.last_time=lastT
    </update>
    <!--通过话题创建时间 查询发表话题的userId-->
    <select id="queryConversationIdsByTime" resultMap="TweetPOMap">
        SELECT DISTINCT user_id, created_at
        FROM t_twitter_comment
        WHERE id=conversation_id AND created_at >= #{startTime} AND created_at <![CDATA[ <= ]]> #{endTime}
    </select>
    <!--查询 妹有分析结果的 tweet-->
    <select id="queryTweetsWithoutAnalysis" resultMap="TweetPOMap">
        select id, created_at, catch_time, lang
        from t_twitter_comment
        where created_at >= #{startTime} and created_at <![CDATA[ <= ]]> #{endTime}
              AND( analysis IS NULL OR analysis="")
    </select>
    <!--统计总行数-->
    <select id="countTweet" resultType="java.lang.Long">
        select table_rows
        from information_schema.tables
        where table_schema='wrc_cloud' AND table_name='t_twitter_comment'
    </select>
    <!--统计 分析结果 总行数-->
    <select id="countTweetAnalysis" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM t_twitter_comment
        WHERE analysis IS NOT NULL AND analysis <![CDATA[ <> ]]> ""
    </select>
    <!--新增 Analysis-->
    <update id="insertAnalysis">
        update t_twitter_comment
        <set>
            <if test="analysis != null and analysis != ''">
                analysis = #{analysis}
            </if>
        </set>
        where id = #{id}
    </update>
    <!--查询单个 Analysis-->
    <select id="queryAnalysisById" resultMap="AnalysisPOMap">
        SELECT 2 as `site_id`, `id`, `analysis`
        FROM `t_twitter_comment`
        WHERE id = #{id}
    </select>
    <!--  更新 analysis  -->
    <update id="updateAnalysis">
        update t_twitter_comment
        <set>
            <if test="analysis != null and analysis != ''">
                analysis = #{analysis}
            </if>
        </set>
        where id = #{id}
    </update>
    <!--通过 text内容&&时间 查询 tweet的内容-->
    <select id="queryAnalysisStatisticCountByTextsAndTime" resultType="java.util.HashMap">
        SELECT co.analysis, COUNT(*) as num
        FROM
        (select DISTINCT conversation_id
        from t_twitter_comment
        <if test="texts != null and texts.size() > 0">
            where
            <foreach collection="texts" item="text" separator="OR" open="(" close=")" index="idx">
                LOWER(full_text) LIKE CONCAT("%", #{text},"%")
            </foreach>
        </if> ) mainIds
        LEFT JOIN
        (SELECT conversation_id, analysis
        FROM t_twitter_comment
        WHERE created_at >= #{startTime} and created_at <![CDATA[ <= ]]> #{endTime}
                and analysis IS NOT NULL AND analysis <![CDATA[ <> ]]> "") co
        ON mainIds.conversation_id=co.conversation_id
        GROUP BY co.analysis
    </select>
    <!--通过 keys内容&&时间 查询 tweet的内容-->
    <select id="queryAnalysisStatisticCountByKeysAndTime" resultType="java.util.HashMap">
        SELECT ids.analysis, COUNT(*) as num
        FROM
        (select DISTINCT tweet_id
        from t_tweet_key
        WHERE
        <if test="keys != null and keys.size() > 0">
            <foreach collection="keys" item="key" separator="OR" open="(" close=")" index="idx">
                `key`=#{key}
            </foreach>
        </if>
        AND start_time <![CDATA[ <= ]]> #{endTime} AND last_time >= #{startTime}) mainIds
        INNER JOIN
        (SELECT conversation_id, analysis FROM t_twitter_comment
        WHERE created_at >= #{startTime} and created_at <![CDATA[ <= ]]> #{endTime}
        AND analysis IS NOT NULL AND analysis <![CDATA[ <> ]]> "") ids
        ON mainIds.tweet_id=ids.conversation_id
        GROUP BY ids.analysis
    </select>

    <!--新增所有列-->
    <insert id="insertTwitterUser">
        insert into t_twitter_user(id, name, screen_name, id_str, created_at, description, location, followers_count, catch_time)
        values (#{id}, #{name}, #{screenName}, #{idStr}, #{createdAt}, #{description}, #{location}, #{followersCount}, #{catchTime})
    </insert>
    <!--查询单个-->
    <select id="queryUserById" resultMap="TwitterUserPOMap">
        select
          id, name, screen_name, id_str, created_at, description, location, followers_count, catch_time
        from t_twitter_user
        where id = #{id}
    </select>
    <!--通过主键修改数据-->
    <update id="updateUserById">
        update t_twitter_user
        <set>
            name = #{name},
            screen_name = #{screenName},
            id_str = #{idStr},
            description = #{description},
            location = #{location},
            followers_count = #{followersCount},
            catch_time = #{catchTime},
            created_at = #{createdAt}
        </set>
        where id = #{id}
    </update>

</mapper>

