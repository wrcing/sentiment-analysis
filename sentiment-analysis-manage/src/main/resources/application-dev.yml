server:
  port: 2242
spring:
  application:
    name: ANALYSIS-MANAGE
  cloud:
    nacos:
      discovery:
        server-addr: localhost:8848 #Nacos服务注册中心地址
    sentinel:
      transport:
        dashboard: localhost:8080 #配置Sentinel dashboard地址
        port: 8719

  datasource:
    url: jdbc:mysql://127.0.0.1:3306/wrc_cloud?useUnicode=true&characterEncoding=UTF-8
    username: root
    password: wrc8848
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver

    druid:
      initial-size: 5   # 初始化大小
      min-idle: 5       # 最小空闲连接个数
      max-active: 20    # 最大连接个数
      max-wait: 60000   # 配置获取连接等待超时的时间
      time-between-eviction-runs-millis: 20000    # 配置间隔多久才进行一次监测，监测需要关闭的空闲连接，单位时毫秒
      min-evictable-idle-time-millis: 60000       # 配置一个连接在池中最小生存的时间
      # max-evictable-idle-time-millis: 180000
      connect-timeout: 30000
      socket-timeout: 30000
      validation-query: select 'x'                # 用来监测连接是否有效的sql，要求是一个查询语句
      test-while-idle: true            # 建议配置为true，不影响性能，并且保证安全性。如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-on-borrow: false            # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      test-on-return: false            # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      pool-prepared-statements: true   # 打开PSCache，并且指定每个连接上PSCache的大小
      max-open-prepared-statements: 20
      filters: stat,wall,log4j2      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙，此处是filter修改的地方
      #配置StatViewServlet
      stat-view-servlet:
        url-pattern: "/druid/*"
        #允许那些ip
        allow: ""
        deny: ""
        login-username: admin
        login-password: admin
        #是否可以重置
        reset-enable: false
        #启用
        enabled: true

  jackson:
    time-zone: Asia/Shanghai
  #数据库连接

  ## Redis 配置
  redis:
    ## Redis数据库索引（默认为0）
    database: 0
    ## Redis服务器地址
    host: 127.0.0.1
    ## Redis服务器连接端口
    port: 6379
    ## Redis服务器连接密码（默认为空）
    password:
    jedis:
      pool:
        ## 连接池最大连接数（使用负值表示没有限制）
        #spring.redis.pool.max-active=8
        max-active: 8
        ## 连接池最大阻塞等待时间（使用负值表示没有限制）
        #spring.redis.pool.max-wait=-1
        max-wait: -1
        ## 连接池中的最大空闲连接
        #spring.redis.pool.max-idle=8
        max-idle: 8
        ## 连接池中的最小空闲连接
        #spring.redis.pool.min-idle=0
        min-idle: 0
    ## 连接超时时间（毫秒）
    timeout: 1200

  #配置rabbitMq 服务器
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
    #虚拟host 可以不设置,使用server默认host
#    virtual-host: JCcccHost


mybatis:
  mapper-locations: classpath:/mapper/*Dao.xml
#  typeAliasesPackage: com.wrc.cloud.entity


management:
  endpoints:
    web:
      exposure:
        include: '*'

feign:
  sentinel:
    enabled: true # 激活Sentinel对Feign的支持


logging:
  config: classpath:log4j2.yml
